@model NPGeek.Web.Models.Park
@{
    ViewBag.Title = "ParkDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Weather = Json.Decode(Model.Weather);
    var Today = Weather[0];
    Dictionary<string, string> weatherAdvice = new Dictionary<string, string>()
    {
        { "rain" , "Pack rain gear and wear waterproof shoes." },
        { "partly-cloudy-day", "Don't bother bringing sunscreen!"},
        { "thunderstorm", "Seek shelter and avoid hiking on exposed ridges." },
        { "cloudy", "Don't bother bringing sunscreen!" },
        { "clear-day", "pack sunblock." },
        { "clear-night", "Moon should be visible tonight."},
        { "sleet", "Sleet coming, dress accordingly."},
        { "wind", "Bring a wind-breaker."},
        { "fog", "Low visibility, fog coming."},
        { "snow", "pack snowshoes."},
        { "partly-cloudy-night", "Partly cloudy night."},
        { "hail", "Hail coming. Be warned!"},
        { "tornado", "Tornado sighted. Seek shelter now!"},
    };

    Dictionary<string, string> iconTranslation = new Dictionary<string, string>()
    {
        { "rain" , "wi-day-rain" },
        { "partly-cloudy-day", "wi-day-cloudy"},
        { "thunderstorm", "wi-day-lightning" },
        { "cloudy", "wi-day-cloudy-high" },
        { "clear-day", "wi-day-sunny" },
        { "clear-night", "wi-day-sunny"},
        { "sleet", "wi-day-sleet"},
        { "wind", "wi-day-windy"},
        { "fog", "wi-day-fog"},
        { "snow", "wi-day-snow"},
        { "partly-cloudy-night", "wi-night-cloudy"},
        { "hail", "wi-day-hail"},
        { "tornado", "wi-tornado"}
    };

    var High = Today.High;
    var Low = Today.Low;
    string HotToday = (High > 75) ? "Bring an extra gallon of water." : "";
    string ColdToday = (Low < 20) ? "Be cautious of the danger of exposure to frigid temperatures" : "";
    string VariableTemperatureToday = (Math.Abs(High - Low) > 20) ? "Wear breathable layers" : "";
}
<style>
    .park-detail-img-sharp {
        background-image: url("../Content/Images/parks/@(Model.ParkCode.ToLower()).jpg");
        background-repeat: no-repeat;
        background-size: cover;
    }
</style>

<img class="park-detail-img-blur" src="~/Content/Images/parks/@(Model.ParkCode.ToLower()).jpg" />

<div class="park-detail-img-sharp">

    <h4 class="park-detail-name">@Model.Name</h4>
    <button class="temperature-toggle-btn" onclick="WeatherConversion()">Toggle F&deg;/C&deg;</button>

    <div class="weather-frosted-background">
        <div class="weather-week weather-today">
            <h4>@DateTime.Today.DayOfWeek</h4>
            <i class="wi @iconTranslation[Today.Forecast]"></i>
            <div class="temperatures">
                <h5 class="weather-detail high">High <span class="weather-conversion">@Today.High</span>&deg;</h5>
                <h5 class="weather-detail">Low <span class="weather-conversion">@Today.Low</span>&deg;</h5>
            </div>
        </div> <!--END WEATHER TODAY-->

        @for (int i = 2; i < 6; i++)
        {
            <div class="weather-week day@(i)">
                <h4>@DateTime.Today.AddDays(i - 1).DayOfWeek</h4>
                <i class="wi @iconTranslation[Weather[i - 1].Forecast]"></i>
                <div class="temperatures">
                    <h5 class="weather-detail high">High <span class="weather-conversion">@Weather[i - 1].High</span> &deg;</h5>
                    <h5 class="weather-detail">Low <span class="weather-conversion">@Weather[i - 1].Low</span> &deg;</h5>
                </div>
            </div>
        }

    </div><!--END WEATHER FROSTED BACKGROUND -->
</div>
<script src="~/Content/WeatherConverter.js"></script>

